use { Vessel, VesselSituation } from ksp::vessel

use { AscentProfile, Apsis } from maneuver::constant
use { Ship } from ship::ship
use { sanitityCheck, takeOff } from maneuver::takeof
use { ascent } from maneuver::ascent
use { circularize } from maneuver::circularize
use { fast_orbit, create_orbit, semi_major_axis } from body::orbit
use { expected_LAN } from ship::navigation
use { clear_altitude } from body::atmosphere

/// Entry Point
pub fn main_flight(vessel: Vessel) -> Result<Unit, string> = {

    const ship = Ship(vessel)

    const peri = 80000.0
    const inclination = 30
    const KerbinLowOrbit = create_orbit(vessel.main_body, peri, inclination, semi_major_axis(vessel.main_body, peri, peri + 10000), expected_LAN(vessel.geo_coordinates, inclination).value, 0.0)

    if (vessel.situation == VesselSituation.PreLaunch){
        if(!sanitityCheck(ship))
            return Err("Vessel unable to carry out its mission \r\n")
        takeOff(ship)
    }

    if (vessel.situation == VesselSituation.Flying) ascent(ship, KerbinLowOrbit, AscentProfile.Trigonometric)
    // if (vessel.situation == VesselSituation.Flying) ascent(ship, KerbinLowOrbit, AscentProfile.Logarithmic)
    // if (vessel.situation == VesselSituation.Flying) ascent(ship, fast_orbit(vessel), AscentProfile.Logarithmic)

    circularize(ship)
    ship.park()

    Ok({})
}